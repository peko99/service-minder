"""Create all tables

Revision ID: 69a7c8d06739
Revises: 
Create Date: 2023-11-05 14:01:24.521409

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '69a7c8d06739'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('part',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('interval_months', sa.Integer(), nullable=False),
    sa.Column('interval_kilometers', sa.Integer(), nullable=False),
    sa.Column('category', sa.Enum('FLUIDS', 'FILTERS', 'TIRES', 'WHEELS', 'BRAKES', 'SPARK_PLUGS', 'WIPERS', 'ENGINE', 'SUSPENSION', 'GEARBOX', 'ELECTRICS', 'TOWING', 'OTHER', name='partscategoryenum'), nullable=False),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('user',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=55), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_full_name'), 'user', ['full_name'], unique=False)
    op.create_table('car',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('license_plate', sa.String(), nullable=False),
    sa.Column('make', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('fuel_capacity', sa.Integer(), nullable=False),
    sa.Column('fuel_type', sa.Enum('DIESEL', 'PETROL', 'LPG', 'ELECTRIC', 'HYBRID', name='fueltypeenum'), nullable=False),
    sa.Column('power', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('expense',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('category', sa.Enum('SERVICE', 'REGISTRATION', 'FINE', 'OTHER', name='expensecategoryenum'), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('mileage', sa.Integer(), nullable=False),
    sa.Column('total_cost', sa.Integer(), nullable=False),
    sa.Column('car_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['car.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('fine',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.Enum('PARKING', 'SPEEDING', 'SEATBELT', 'DUI', 'PHONE', 'RED_LIGHT', 'OTHER', name='finecategoryenum'), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('registration',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('insurance_cost', sa.Integer(), nullable=False),
    sa.Column('road_tax', sa.Integer(), nullable=False),
    sa.Column('eco_tax', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('reminder',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('interval_months', sa.Integer(), nullable=False),
    sa.Column('interval_kilometers', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('service',
    sa.Column('id_', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('labour_cost', sa.Integer(), nullable=False),
    sa.Column('parts_total_cost', sa.Integer(), nullable=False),
    sa.Column('expense_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.id_'], ),
    sa.PrimaryKeyConstraint('id_')
    )
    op.create_table('services_parts',
    sa.Column('service_id', sa.UUID(), nullable=True),
    sa.Column('part_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['part_id'], ['part.id_'], ),
    sa.ForeignKeyConstraint(['service_id'], ['service.id_'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('services_parts')
    op.drop_table('service')
    op.drop_table('reminder')
    op.drop_table('registration')
    op.drop_table('fine')
    op.drop_table('expense')
    op.drop_table('car')
    op.drop_index(op.f('ix_user_full_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('part')
    # ### end Alembic commands ###
